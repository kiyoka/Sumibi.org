#!/usr/local/bin/gosh /usr/local/bin/sxmlcnv

(load "./common.scm")

(define (L:body)
  '(
    (*slide "Sumibiとは？"
            (*ul 
             (li "Sumibiはオープンソースの日本語入力メソッドです。")
             (li "Internet上のドキュメントを読み込んでひとりでに賢くなる新感覚の漢字変換エンジンを持っています。")
             (li (*link "sourceforge.jp" "http://sourceforge.jp/projects/sumibi/") "からダウンロードできます。")
             (li ,W:GPL "のもとで配布されています。(サンプル等はLGPLになっています。)")))
    
    (*slide "さっそく使ってみる"
            (*ul-inc
             (li (*link "Webブラウザから使う"       "http://www.sumibi.org/"))
             (li (*link "Emacsに組みこむ(安定版)"   "sumibi_el_stable.html"))
             (li (*link "Emacsに組みこむ(テスト版)" "sumibi_el_testing.html"))))))

;; ページの出力
(output "世界の果てから漢字変換Sumibiの開発 2006" (L:body))


(define _comment
 "

    統計的学習機能をもつ漢字変換エンジン Sumibi の開発


開発動機
  純粋な技術的興味が先行してSumibiを開発した
  → 実際に動く姿が見たかった
  新規性に重きを置く
  → 世界にまだない物を作りたい
  開発を持続させるためには毎日使うものを作るのがいい
  → 自分の欲しい物、使う物を作る

開発の歴史
  開発スタート
    だいたいの年月日と作業内容を明記する ( ブログを見ながら過去を追跡した結果 )
 2004.8月
    Webで世のなかのカナ漢字変換エンジンを調べる
      Anthyすごい。開発者の使命感に気後れする。本当にこんな物に手を出して良いのか？という感じ
      PRIME面白い。
      自分はやっぱりSKKが好き。
      yc.elもちょっと試してみて好きになる。
    確率論の本をたくさん読みはじめる
      実はあんまり高度な話題はいまでも理解仕切れていません。
      読んでいる内にSumibiはそんなに高度な数学を使わなくてもできる筈というのが分かってきた
 2004.10月
    本当に実現可能か半信半疑のままスタートする
    辞書構築ツールから作り始める
    エンジンの開発をスタートする
      この頃は yc.elの代わりになるものを作ろうとしていた。
      Emacsのみで動けば良いと考えていた
 2004.12月
    エンジンがなんとなく動き始める
    sourceforge.jpにsumibiという名前でプロジェクトを登録する
    この間一人で悶絶しながら黙々と開発を続ける
 2005.1月
    EmacsからだましだましSumibiを使える様になる。
    sumibi.orgというドメイン取得
    Sumibi.pmをKato Atsushiさんが開発される
 2005.3月
    Ajaxクライアントによる更なる発展
     Kato Atsushiさんの参加・開発でWebブラウザから使える様になった
     サイトSumibi.orgとしてオープンした
 2005.5月
    初の海外からの試運転
 2005.6月
    SOAPに対応する(WSDLも公開)
 2005.8月
    世界中からアクセスされはじめる
 2005.9月
    日経IT Proで紹介される
    気長に改善改善....
 2006.5月
    インフォテリア株式会社様よりサーバマシン提供を受ける
 2006.7月
    小飼弾さんのブログ、インフォテリア株式会社の江島さんのブログで紹介される
 2006.8月
    LL Ringでデモする
 2006.9月
    現在( 本資料の作成、発表 )


Sumibiシステムの構成
  SOAPでクライアント・サーバーが疎結合になっている
  → SumibiWebAPI として定義されている
  → いろんなクライアントの実装が出てくることを期待。
      今後scimクライアント等の登場を期待
      firefoxプラグインなども良いかな
  サーバー側の構成 → 図を使って説明する
    sumibiコマンド(変換エンジン)
    sumiyakiコマンド(統計学習ツール)
    MySQLを使用している

  クライアント側の構成
    - Ajax(JavaScript言語)
    - Emacs + curl
      デザインポリシー:No config is good config
    - Perl/Ruby/Pythonのサンプルもある

Sumibiエンジンのアルゴリズム概略
  高い変換精度の実現
    ある程度のあきらめを行うことによって、あたかも変換精度が高そうに見える。
    次の二つのデザインポリシーの結果の産物
      デザインポリシー: KISS ( Keep it simple, stupid! )
      デザインポリシー: 人間が得意なことは人間に、コンピューターが得意なことはコンピューターに。現実的解決。

  人間観察の結果出てきた割り切り
  WindowのIMEを使っている人の行動を日々観察していた。
    → 文節区切り間違いをちまちま直す人は殆どいない。
       もういちど最初から文章を打ちこみ直しして、文節区切り間違いの前まででいったん変換している。
       → 面倒なインターフェースは使われない
    → 連文節でどんどん文章を入力する人は殆どいない。
       

  1. 分かち書で人間が文節区切りを指定することで、文節区切り間違いを無くす。
  2. 

Sumibi学習方法の概略


")
